{"version":3,"sources":["pomodoro/ProgressBar.js","utils/duration/index.js","pomodoro/Durations.js","pomodoro/TimerControls.js","utils/class-names/index.js","pomodoro/TimerSettings.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["ProgressBar","activeSession","onBreak","focusSetting","focusElapsed","breakSetting","breakElapsed","className","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","Durations","timerRunning","data-testid","TimerControls","classNameToBoolean","playPause","terminate","aria-label","type","title","onClick","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","TimerSettings","changeTimerSetting","name","Pomodoro","audioElement","document","getElementsByClassName","initialState","useState","timerData","setTimerData","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","play","currentTarget","validatedValue","min","max","parseInt","src","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea1bff7a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ProgressBar({ activeSession, onBreak, focusSetting, focusElapsed, breakSetting, breakElapsed }) {\n\n  if (!onBreak && activeSession) {\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={(focusElapsed / (focusSetting * 60)) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n              style={{ width: `${(focusElapsed / (focusSetting * 60)) * 100}%` }} // TODO: Increase width % as elapsed time increases\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else if (onBreak && activeSession) {\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={(breakElapsed / (breakSetting * 60)) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n              style={{ width: `${(breakElapsed / (breakSetting * 60)) * 100}%` }} // TODO: Increase width % as elapsed time increases\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ProgressBar;","/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\nimport { secondsToDuration } from '../utils/duration';\nimport { minutesToDuration } from '../utils/duration';\n\nfunction Durations({ activeSession, timerRunning, onBreak, focusSetting, focusElapsed, breakSetting, breakElapsed }) {\n  if (!onBreak && activeSession) {\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\">Focusing for {minutesToDuration(focusSetting)} minutes</h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration((focusSetting * 60) - focusElapsed)} remaining\n          </p>\n          {!timerRunning ? (\n          <h3>PAUSED</h3>\n          ) : ( null )}\n        </div>\n      </div>\n    );\n  } else if (onBreak && activeSession) {\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\">On Break for {minutesToDuration(breakSetting)} minutes</h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration((breakSetting * 60) - breakElapsed)} remaining\n          </p>\n          {!timerRunning ? (\n          <h3>PAUSED</h3>\n          ) : ( null )}\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Durations;","import React from \"react\";\nimport classNames from \"../utils/class-names\";\n\nfunction TimerControls({ activeSession, onBreak, timerRunning, playPause, terminate }) {\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <div\n          className=\"btn-group btn-group-lg mb-2\"\n          role=\"group\"\n          aria-label=\"Timer controls\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-testid=\"play-pause\"\n            title=\"Start or pause timer\"\n            onClick={playPause}\n          >\n            <span\n              className={classNames({\n                oi: true,\n                \"oi-media-play\": !timerRunning,\n                \"oi-media-pause\": timerRunning,\n              })}\n            />\n          </button>\n          {activeSession ? (\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            title=\"Stop the session\"\n            onClick={terminate}\n          >\n            <span className=\"oi oi-media-stop\" />\n          </button>\n          ) : ( null )}\n        </div>\n      </div>\n    </div>  \n  );\n}\n\nexport default TimerControls;","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\nimport { minutesToDuration } from '../utils/duration';\n\nfunction TimerSettings({ focusSetting, breakSetting, changeTimerSetting }) {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <div className=\"input-group input-group-lg mb-2\">\n          <span className=\"input-group-text\" data-testid=\"duration-focus\">\n            Focus Duration: {minutesToDuration(focusSetting)}\n          </span>\n          <div className=\"input-group-append\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"decrease-focus\"\n              name=\"focusSetting\"\n              onClick={changeTimerSetting}\n              value={(focusSetting - 5)}\n            >\n              <span className=\"oi oi-minus\" />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"increase-focus\"\n              name=\"focusSetting\"\n              onClick={changeTimerSetting}\n              value={(focusSetting + 5)}\n            >\n              <span className=\"oi oi-plus\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col\">\n        <div className=\"float-right\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-break\">\n              Break Duration: {minutesToDuration(breakSetting)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-break\"\n                name=\"breakSetting\"\n                onClick={changeTimerSetting}\n                value={breakSetting - 1}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-break\"\n                name=\"breakSetting\"\n                onClick={changeTimerSetting}\n                value={breakSetting + 1}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimerSettings;","import React, { useState } from \"react\";\n// Components\nimport ProgressBar from \"./ProgressBar\";\nimport Durations from \"./Durations\";\nimport TimerControls from \"./TimerControls\";\nimport TimerSettings from \"./TimerSettings\";\n// Utilities\nimport useInterval from \"../utils/useInterval\";\n\nfunction Pomodoro() {\n\n  const audioElement = document.getElementsByClassName(\"audio-element\")[0];\n\n  const initialState = {\n    activeSession: false,\n    timerRunning: false,\n    onBreak: false,\n    // Minutes\n    focusSetting: 25,\n    breakSetting: 5,\n    // Seconds\n    focusElapsed: 0,\n    breakElapsed: 0,\n  };\n\n  // Set timer data\n  const [timerData, setTimerData] = useState({ ...initialState });\n\n  // Simplified object variables\n  const activeSession = timerData.activeSession;\n  const timerRunning = timerData.timerRunning;\n  const onBreak = timerData.onBreak;\n  const focusSetting = timerData.focusSetting;\n  const breakSetting = timerData.breakSetting;\n  const focusElapsed = timerData.focusElapsed;\n  const breakElapsed = timerData.breakElapsed;\n\n  // Change timer settings\n  const handleTimerSettingChange = ({ currentTarget }) => {\n    const type = currentTarget.name;\n    const value = currentTarget.value;\n\n    // Set limits for Focus and Break timers\n    const validatedValue = type === \"focusSetting\" ? Math.min(60, Math.max(parseInt(value), 5)) : Math.min(15, Math.max(parseInt(value), 1));\n    \n    setTimerData({\n      ...timerData,\n      [type]: validatedValue,\n    });\n  }\n\n  // Timer play/pause\n  const playPause = () => {\n    // Create an active session if it doesn't exist\n    if (!activeSession) {\n      setTimerData({\n        ...timerData,\n        activeSession: true,\n        timerRunning: !timerRunning\n      });\n    } else {\n      setTimerData({\n        ...timerData,\n        timerRunning: !timerRunning\n      });\n    }\n  }\n\n  // Restore timer to default state\n  const terminateSession = () => {\n    setTimerData({\n      ...initialState\n    });\n  }\n\n  // Add to elapsed time according to session type\n  useInterval(\n    () => {\n      // Check for 100% progress & switch session type\n      if ((focusSetting * 60) === focusElapsed) {\n        audioElement.play();\n        setTimerData({\n          ...timerData,\n          onBreak: true,\n          focusElapsed: 0\n        });\n      } else if ((breakSetting * 60) === breakElapsed) {\n        audioElement.play();\n        setTimerData({\n          ...timerData,\n          onBreak: false,\n          breakElapsed: 0\n        });\n      }\n      \n      // Less than 100% progress\n      else {\n        if (!onBreak) {\n          setTimerData({\n            ...timerData,\n            focusElapsed: focusElapsed + 1\n          });\n        } else {\n          setTimerData({\n            ...timerData,\n            breakElapsed: breakElapsed + 1\n          });\n        }\n      }\n    },\n    timerRunning ? 1000 : null\n  );\n\n  return (\n    <div className=\"pomodoro\">\n      <TimerSettings {...timerData} changeTimerSetting={handleTimerSettingChange} />\n      <TimerControls {...timerData} playPause={playPause} terminate={terminateSession} /> \n      <Durations {...timerData} />\n      <ProgressBar {...timerData} />\n      <audio className=\"audio-element\">\n        <source src=\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\"></source>\n      </audio>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}