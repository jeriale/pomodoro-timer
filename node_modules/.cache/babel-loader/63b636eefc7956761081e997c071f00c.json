{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Durations.js\";\nimport React from \"react\";\nimport { secondsToDuration } from '../utils/duration';\nimport { minutesToDuration } from '../utils/duration';\n\nfunction Durations({\n  onBreak,\n  focusSetting,\n  focusElapsed,\n  breakSetting,\n  breakElapsed\n}, isTimerRunning) {\n  if (!onBreak) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, \"Focusing for \", minutesToDuration(focusSetting), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, secondsToDuration(focusSetting * 60 - focusElapsed), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, \"PAUSED\") : null));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"On Break for \", minutesToDuration(breakSetting), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, secondsToDuration(breakSetting * 60 - breakElapsed), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"PAUSED\") : null));\n}\n\nexport default Durations;","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Durations.js"],"names":["React","secondsToDuration","minutesToDuration","Durations","onBreak","focusSetting","focusElapsed","breakSetting","breakElapsed","isTimerRunning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,YAAzB;AAAuCC,EAAAA,YAAvC;AAAqDC,EAAAA;AAArD,CAAnB,EAAwFC,cAAxF,EAAwG;AACtG,MAAI,CAACL,OAAL,EAAc;AACZ,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA8CF,iBAAiB,CAACG,YAAD,CAA/D,aADF,eAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,iBAAiB,CAAEI,YAAY,GAAG,EAAhB,GAAsBC,YAAvB,CADpB,eAFF,EAKG,CAACG,cAAD,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAEK,IAPR,CADF,CADF;AAaD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8CP,iBAAiB,CAACK,YAAD,CAA/D,aADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,iBAAiB,CAAEM,YAAY,GAAG,EAAhB,GAAsBC,YAAvB,CADpB,eAFF,EAKG,CAACC,cAAD,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,GAEK,IAPR,CADF,CADF;AAaD;;AAED,eAAeN,SAAf","sourcesContent":["import React from \"react\";\nimport { secondsToDuration } from '../utils/duration';\nimport { minutesToDuration } from '../utils/duration';\n\nfunction Durations({ onBreak, focusSetting, focusElapsed, breakSetting, breakElapsed }, isTimerRunning) {\n  if (!onBreak) {\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\">Focusing for {minutesToDuration(focusSetting)} minutes</h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration((focusSetting * 60) - focusElapsed)} remaining\n          </p>\n          {!isTimerRunning ? (\n          <h3>PAUSED</h3>\n          ) : ( null )}\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        <h2 data-testid=\"session-title\">On Break for {minutesToDuration(breakSetting)} minutes</h2>\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n          {secondsToDuration((breakSetting * 60) - breakElapsed)} remaining\n        </p>\n        {!isTimerRunning ? (\n        <h3>PAUSED</h3>\n        ) : ( null )}\n      </div>\n    </div>\n  );\n}\n\nexport default Durations;"]},"metadata":{},"sourceType":"module"}