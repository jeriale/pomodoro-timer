{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  activeSession,\n  onBreak,\n  focusSetting,\n  focusElapsed,\n  breakSetting,\n  breakElapsed\n}) {\n  if (!onBreak && activeSession) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": focusElapsed / (focusSetting * 60) * 100 // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: `${focusElapsed / (focusSetting * 60) * 100}%`\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }))));\n  } else if (onBreak && activeSession) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": breakElapsed / (breakSetting * 60) * 100 // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: `${breakElapsed / (breakSetting * 60) * 100}%`\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return null;\n  }\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","activeSession","onBreak","focusSetting","focusElapsed","breakSetting","breakElapsed","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA,YAA1B;AAAwCC,EAAAA,YAAxC;AAAsDC,EAAAA,YAAtD;AAAoEC,EAAAA;AAApE,CAArB,EAAyG;AAEvG,MAAI,CAACJ,OAAD,IAAYD,aAAhB,EAA+B;AAC7B,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAgBH,YAAY,IAAID,YAAY,GAAG,EAAnB,CAAb,GAAuC,GALxD,CAK6D;AAL7D;AAME,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAG,GAAGJ,YAAY,IAAID,YAAY,GAAG,EAAnB,CAAb,GAAuC,GAAI;AAAvD,OANT,CAMsE;AANtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AAgBD,GAjBD,MAiBO,IAAID,OAAO,IAAID,aAAf,EAA8B;AACnC,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAgBD,YAAY,IAAID,YAAY,GAAG,EAAnB,CAAb,GAAuC,GALxD,CAK6D;AAL7D;AAME,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAG,GAAGF,YAAY,IAAID,YAAY,GAAG,EAAnB,CAAb,GAAuC,GAAI;AAAvD,OANT,CAMsE;AANtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AAgBD,GAjBM,MAiBA;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAeL,WAAf","sourcesContent":["import React from \"react\";\n\nfunction ProgressBar({ activeSession, onBreak, focusSetting, focusElapsed, breakSetting, breakElapsed }) {\n\n  if (!onBreak && activeSession) {\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={(focusElapsed / (focusSetting * 60)) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n              style={{ width: `${(focusElapsed / (focusSetting * 60)) * 100}%` }} // TODO: Increase width % as elapsed time increases\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else if (onBreak && activeSession) {\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={(breakElapsed / (breakSetting * 60)) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n              style={{ width: `${(breakElapsed / (breakSetting * 60)) * 100}%` }} // TODO: Increase width % as elapsed time increases\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}