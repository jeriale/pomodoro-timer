{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nfunction Pomodoro() {\n  const initialState = {\n    activeSession: false,\n    sessionType: \"\",\n    onBreak: false,\n    // Minutes\n    focusSetting: 25,\n    breakSetting: 5,\n    // Seconds\n    focusElapsed: 0,\n    breakElapsed: 0\n  };\n  const [timerData, setTimerData] = useState({ ...initialState\n  }); // Change timer settings\n\n  const handleTimerSettingChange = ({\n    currentTarget\n  }) => {\n    const settingType = currentTarget.name;\n    const settingValue = currentTarget.value;\n    const formattedValue = settingType === \"focusSetting\" ? limitFocusTimer(settingValue) : limitBreakTimer(settingValue);\n    setTimerData({ ...timerData,\n      [settingType]: formattedValue\n    });\n  }; // Create a session\n\n\n  const setActiveSession = () => {\n    setTimerData({ ...timerData,\n      activeSession: true\n    });\n  }; // Set limit for focus timer setting\n\n\n  function limitFocusTimer(value) {\n    return Math.min(60, Math.max(parseInt(value), 5));\n  } // Set limit for break timer setting\n\n\n  function limitBreakTimer(value) {\n    return Math.min(15, Math.max(parseInt(value), 1));\n  } // Toggle timer on/off\n\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState); // Create an active session if it doesn't exist\n\n    if (!timerData.activeSession) {\n      setActiveSession();\n    }\n  } // Revert timer to default state\n\n\n  const terminateSession = () => {\n    setIsTimerRunning(false);\n    setTimerData({ ...initialState\n    });\n  }; // Add to elapsed time according to session type\n\n\n  useInterval(() => {\n    if (!timerData.onBreak) {\n      setTimerData({ ...timerData,\n        focusElapsed: timerData.focusElapsed + 1\n      });\n    } else {\n      setTimerData({ ...timerData,\n        breakElapsed: timerData.breakElapsed + 1\n      });\n    }\n  }, isTimerRunning ? 1000 : null); // Convert elapsed time to MM:SS\n\n  function convertToTimeFormat(seconds) {\n    const secs = Math.floor(seconds % 60);\n    const secsAsString = secs < 10 ? \"0\" + secs : secs;\n    const timeToMins = Math.floor(seconds / 60);\n    const mins = timeToMins % 60;\n    const minsAsString = mins < 10 ? \"0\" + mins : mins;\n    return minsAsString + \":\" + secsAsString;\n  } // Toggle between \"Focusing\" or \"On Break\"\n\n\n  const handleBreakFocusToggle = () => {\n    if (!timerData.onBreak) {\n      setTimerData({ ...timerData,\n        sessionType: \"Focusing\"\n      });\n    } else {\n      setTimerData({ ...timerData,\n        sessionType: \"On Break\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", timerData.focusSetting, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    name: \"focusSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.focusSetting - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    name: \"focusSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.focusSetting + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", timerData.breakSetting, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    name: \"breakSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.breakSetting - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    name: \"breakSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.breakSetting + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  })), timerData.activeSession ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: terminateSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })) : null))), timerData.activeSession ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, !timerData.onBreak ? /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, timerData.sessionType, \" for \", timerData.focusSetting, \":00 minutes\") : /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, timerData.sessionType, \" for \", timerData.breakSetting, \":00 minutes\"), !timerData.onBreak ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, convertToTimeFormat(timerData.focusSetting * 60 - timerData.focusElapsed), \" remaining\") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, convertToTimeFormat(timerData.breakSetting * 60 - timerData.breakElapsed), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, !timerData.onBreak ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": timerData.focusElapsed / timerData.focusSetting * 100 // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${timerData.focusElapsed / timerData.focusSetting * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": timerData.breakElapsed / timerData.breakSetting * 100 // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${timerData.breakElapsed / timerData.breakSetting * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }))))) : null);\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Pomodoro","initialState","activeSession","sessionType","onBreak","focusSetting","breakSetting","focusElapsed","breakElapsed","timerData","setTimerData","handleTimerSettingChange","currentTarget","settingType","name","settingValue","value","formattedValue","limitFocusTimer","limitBreakTimer","setActiveSession","Math","min","max","parseInt","isTimerRunning","setIsTimerRunning","playPause","prevState","terminateSession","convertToTimeFormat","seconds","secs","floor","secsAsString","timeToMins","mins","minsAsString","handleBreakFocusToggle","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nfunction Pomodoro() {\n  const initialState = {\n    activeSession: false,\n    sessionType: \"\",\n    onBreak: false,\n    // Minutes\n    focusSetting: 25,\n    breakSetting: 5,\n    // Seconds\n    focusElapsed: 0,\n    breakElapsed: 0,\n  };\n\n  const [timerData, setTimerData] = useState({ ...initialState });\n  \n  // Change timer settings\n  const handleTimerSettingChange = ({ currentTarget }) => {\n    const settingType = currentTarget.name;\n    const settingValue = currentTarget.value;\n    const formattedValue = settingType === \"focusSetting\" ? limitFocusTimer(settingValue) : limitBreakTimer(settingValue);\n    \n    setTimerData({\n      ...timerData,\n      [settingType]: formattedValue,\n    });\n  }\n\n  // Create a session\n  const setActiveSession = () => {\n    setTimerData({\n      ...timerData,\n      activeSession: true\n    })\n  }\n\n  // Set limit for focus timer setting\n  function limitFocusTimer(value) {\n    return Math.min(60, Math.max(parseInt(value), 5));\n  }\n\n  // Set limit for break timer setting\n  function limitBreakTimer(value) {\n    return Math.min(15, Math.max(parseInt(value), 1));\n  }\n\n  // Toggle timer on/off\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    // Create an active session if it doesn't exist\n    if (!timerData.activeSession) {\n      setActiveSession();\n    }\n  }\n\n  // Revert timer to default state\n  const terminateSession = () => {\n    setIsTimerRunning(false);\n    setTimerData({\n      ...initialState\n    });\n  }\n\n  // Add to elapsed time according to session type\n  useInterval(\n    () => {\n      if (!timerData.onBreak) {\n        setTimerData({\n          ...timerData,\n          focusElapsed: timerData.focusElapsed + 1\n        });\n      } else {\n        setTimerData({\n          ...timerData,\n          breakElapsed: timerData.breakElapsed + 1\n        });\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  // Convert elapsed time to MM:SS\n  function convertToTimeFormat(seconds) {\n    const secs = Math.floor(seconds % 60);\n    const secsAsString = secs < 10 ? \"0\" + secs : secs;\n    const timeToMins = Math.floor(seconds / 60);\n    const mins = timeToMins % 60;\n    const minsAsString = mins < 10 ? \"0\" + mins : mins;\n    return minsAsString + \":\" + secsAsString;\n  }\n\n  // Toggle between \"Focusing\" or \"On Break\"\n  const handleBreakFocusToggle = () => {\n    if (!timerData.onBreak) {\n      setTimerData({\n        ...timerData,\n        sessionType: \"Focusing\"\n      });\n    } else {\n      setTimerData({\n        ...timerData,\n        sessionType: \"On Break\"\n      });\n    }\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {timerData.focusSetting}:00\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                name=\"focusSetting\"\n                onClick={handleTimerSettingChange}\n                value={(timerData.focusSetting - 1)}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                name=\"focusSetting\"\n                onClick={handleTimerSettingChange}\n                value={(timerData.focusSetting + 1)}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {timerData.breakSetting}:00\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  name=\"breakSetting\"\n                  onClick={handleTimerSettingChange}\n                  value={timerData.breakSetting - 1}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  name=\"breakSetting\"\n                  onClick={handleTimerSettingChange}\n                  value={timerData.breakSetting + 1}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            {timerData.activeSession ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={terminateSession}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n            ) : ( null )}\n          </div>\n        </div>\n      </div>\n      {timerData.activeSession ? (\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            {!timerData.onBreak ? (\n            <h2 data-testid=\"session-title\">{timerData.sessionType} for {timerData.focusSetting}:00 minutes</h2>\n            ) : (\n            <h2 data-testid=\"session-title\">{timerData.sessionType} for {timerData.breakSetting}:00 minutes</h2>\n            )}\n            {/* TODO: Update message below to include time remaining in the current session */}\n            {!timerData.onBreak ? (\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {convertToTimeFormat((timerData.focusSetting * 60) - timerData.focusElapsed)} remaining\n            </p>\n            ) : (\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {convertToTimeFormat((timerData.breakSetting * 60) - timerData.breakElapsed)} remaining\n            </p>\n            )}\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {!timerData.onBreak ? (\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={(timerData.focusElapsed / timerData.focusSetting) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${(timerData.focusElapsed / timerData.focusSetting) * 100}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n            ) : (\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={(timerData.breakElapsed / timerData.breakSetting) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${(timerData.breakElapsed / timerData.breakSetting) * 100}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n            )}\n          </div>\n        </div>\n      </div>\n      ) : ( null )}\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}