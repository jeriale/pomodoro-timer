{"ast":null,"code":"var _jsxFileName = \"/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nconst audioElement = new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`);\n\nfunction Pomodoro() {\n  const initialState = {\n    activeSession: false,\n    onBreak: false,\n    // Minutes\n    focusSetting: 25,\n    breakSetting: 5,\n    // Seconds\n    focusElapsed: 0,\n    breakElapsed: 0\n  }; // Change timer settings\n\n  const [timerData, setTimerData] = useState({ ...initialState\n  });\n\n  const handleTimerSettingChange = ({\n    currentTarget\n  }) => {\n    const type = currentTarget.name;\n    const value = currentTarget.value; // Set limits for Focus and Break timers\n\n    const validatedValue = type === \"focusSetting\" ? Math.min(60, Math.max(parseInt(value), 5)) : Math.min(15, Math.max(parseInt(value), 1));\n    setTimerData({ ...timerData,\n      [type]: validatedValue\n    });\n  }; // Toggle timer on/off\n\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  const playPause = () => {\n    setIsTimerRunning(prevState => !prevState); // Create an active session if it doesn't exist\n\n    if (!timerData.activeSession) {\n      toggleActiveSession(true);\n    }\n  }; // Toggle active session\n\n\n  const toggleActiveSession = value => {\n    // Set session visibility\n    const session = document.getElementById(\"session\");\n    value ? session.style = {\n      display: \"block\"\n    } : session.style = {\n      display: \"none\"\n    };\n    setTimerData({ ...timerData,\n      activeSession: value\n    });\n  }; // Revert timer to default state\n\n\n  const terminateSession = () => {\n    setIsTimerRunning(false);\n    toggleActiveSession(false);\n    setTimerData({ ...initialState\n    });\n  }; // Add to elapsed time according to session type\n\n\n  useInterval(() => {\n    const onBreak = timerData.onBreak;\n    const focusSetting = timerData.focusSetting * 60;\n    const breakSetting = timerData.breakSetting * 60;\n    const focusElapsed = timerData.focusElapsed;\n    const breakElapsed = timerData.breakElapsed; // Check for 100% progress\n\n    if (focusSetting === focusElapsed) {\n      audioElement.play();\n      setTimerData({ ...timerData,\n        onBreak: true,\n        focusElapsed: 0\n      });\n    } else if (breakSetting === breakElapsed) {\n      audioElement.play();\n      setTimerData({ ...timerData,\n        onBreak: false,\n        breakElapsed: 0\n      });\n    } // Less than 100% progress\n    else {\n        if (!onBreak) {\n          setTimerData({ ...timerData,\n            focusElapsed: focusElapsed + 1\n          });\n        } else {\n          setTimerData({ ...timerData,\n            breakElapsed: breakElapsed + 1\n          });\n        }\n      }\n  }, isTimerRunning ? 1000 : null);\n\n  const playAudio = () => {\n    audioElement.addEventListener(\"canplay\", event => {\n      audioElement.play();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(timerData.focusSetting)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    name: \"focusSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.focusSetting - 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    name: \"focusSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.focusSetting + 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(timerData.breakSetting)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    name: \"breakSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.breakSetting - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    name: \"breakSetting\",\n    onClick: handleTimerSettingChange,\n    value: timerData.breakSetting + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  })), timerData.activeSession ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: terminateSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  })) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"session\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, !timerData.onBreak ? /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"Focusing for \", minutesToDuration(timerData.focusSetting), \" minutes\") : /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"On Break for \", minutesToDuration(timerData.breakSetting), \" minutes\"), !timerData.onBreak ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, secondsToDuration(timerData.focusSetting * 60 - timerData.focusElapsed), \" remaining\") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, secondsToDuration(timerData.breakSetting * 60 - timerData.breakElapsed), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"PAUSED\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, !timerData.onBreak ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": timerData.focusElapsed / (timerData.focusSetting * 60) * 100 // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${timerData.focusElapsed / (timerData.focusSetting * 60) * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": timerData.breakElapsed / (timerData.breakSetting * 60) * 100 // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${timerData.breakElapsed / (timerData.breakSetting * 60) * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/home/jon/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","audioElement","Audio","process","env","PUBLIC_URL","Pomodoro","initialState","activeSession","onBreak","focusSetting","breakSetting","focusElapsed","breakElapsed","timerData","setTimerData","handleTimerSettingChange","currentTarget","type","name","value","validatedValue","Math","min","max","parseInt","isTimerRunning","setIsTimerRunning","playPause","prevState","toggleActiveSession","session","document","getElementById","style","display","terminateSession","play","playAudio","addEventListener","event","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\n\nconst audioElement = new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`);\n\nfunction Pomodoro() {\n\n  const initialState = {\n    activeSession: false,\n    onBreak: false,\n    // Minutes\n    focusSetting: 25,\n    breakSetting: 5,\n    // Seconds\n    focusElapsed: 0,\n    breakElapsed: 0,\n  };\n\n  // Change timer settings\n  const [timerData, setTimerData] = useState({ ...initialState });\n\n  const handleTimerSettingChange = ({ currentTarget }) => {\n    const type = currentTarget.name;\n    const value = currentTarget.value;\n\n    // Set limits for Focus and Break timers\n    const validatedValue = type === \"focusSetting\" ? Math.min(60, Math.max(parseInt(value), 5)) : Math.min(15, Math.max(parseInt(value), 1));\n    \n    setTimerData({\n      ...timerData,\n      [type]: validatedValue,\n    });\n  }\n\n  // Toggle timer on/off\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  const playPause = () => {\n    setIsTimerRunning((prevState) => !prevState);\n    // Create an active session if it doesn't exist\n    if (!timerData.activeSession) {\n      toggleActiveSession(true);\n    }\n  }\n\n  // Toggle active session\n  const toggleActiveSession = (value) => {\n      // Set session visibility\n      const session = document.getElementById(\"session\");\n      value ? session.style = { display: \"block\" } : session.style = { display: \"none\" };\n\n    setTimerData({\n      ...timerData,\n      activeSession: value\n    });\n  }\n\n  // Revert timer to default state\n  const terminateSession = () => {\n    setIsTimerRunning(false);\n    toggleActiveSession(false);\n    setTimerData({\n      ...initialState\n    });\n  }\n\n  // Add to elapsed time according to session type\n  useInterval(\n    () => {\n      const onBreak = timerData.onBreak;\n      const focusSetting = timerData.focusSetting * 60;\n      const breakSetting = timerData.breakSetting * 60;\n      const focusElapsed = timerData.focusElapsed;\n      const breakElapsed = timerData.breakElapsed;\n\n      // Check for 100% progress\n      if (focusSetting === focusElapsed) {\n        audioElement.play();\n\n        setTimerData({\n          ...timerData,\n          onBreak: true,\n          focusElapsed: 0\n        });\n      } else if (breakSetting === breakElapsed) {\n        audioElement.play();\n\n        setTimerData({\n          ...timerData,\n          onBreak: false,\n          breakElapsed: 0\n        });\n      }\n      \n      // Less than 100% progress\n      else {\n        if (!onBreak) {\n          setTimerData({\n            ...timerData,\n            focusElapsed: focusElapsed + 1\n          });\n        } else {\n          setTimerData({\n            ...timerData,\n            breakElapsed: breakElapsed + 1\n          });\n        }\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  const playAudio = () => {\n    audioElement.addEventListener(\"canplay\", event => {\n      audioElement.play();\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(timerData.focusSetting)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                name=\"focusSetting\"\n                onClick={handleTimerSettingChange}\n                value={(timerData.focusSetting - 5)}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                name=\"focusSetting\"\n                onClick={handleTimerSettingChange}\n                value={(timerData.focusSetting + 5)}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(timerData.breakSetting)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  name=\"breakSetting\"\n                  onClick={handleTimerSettingChange}\n                  value={timerData.breakSetting - 1}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  name=\"breakSetting\"\n                  onClick={handleTimerSettingChange}\n                  value={timerData.breakSetting + 1}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            {timerData.activeSession ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={terminateSession}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n            ) : ( null )}\n          </div>\n        </div>\n      </div>\n      <div id=\"session\" style={{ display: \"none\" }}>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            {!timerData.onBreak ? (\n            <h2 data-testid=\"session-title\">Focusing for {minutesToDuration(timerData.focusSetting)} minutes</h2>\n            ) : (\n            <h2 data-testid=\"session-title\">On Break for {minutesToDuration(timerData.breakSetting)} minutes</h2>\n            )}\n            {/* TODO: Update message below to include time remaining in the current session */}\n            {!timerData.onBreak ? (\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration((timerData.focusSetting * 60) - timerData.focusElapsed)} remaining\n            </p>\n            ) : (\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration((timerData.breakSetting * 60) - timerData.breakElapsed)} remaining\n            </p>\n            )}\n            {!isTimerRunning ? (\n            <h3>PAUSED</h3>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {!timerData.onBreak ? (\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={(timerData.focusElapsed / (timerData.focusSetting * 60)) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${(timerData.focusElapsed / (timerData.focusSetting * 60)) * 100}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n            ) : (\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={(timerData.breakElapsed / (timerData.breakSetting * 60)) * 100} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${(timerData.breakElapsed / (timerData.breakSetting * 60)) * 100}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}